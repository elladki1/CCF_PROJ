# Define variables 
variable pdump equal 5000
variable prun equal 200000
variable P_target equal 0.0         # Lateral pressure target

units           lj
atom_style      full
dimension       3
neighbor        1.5 bin
neigh_modify    every 3 delay 0 check yes
boundary        p p p

bond_style      fene
kspace_style    pppm 0.0001
dielectric      1.0

# Pair Style LJ coulombic interactions and dpd tstat momentum conservation
if "${idx} == 000" then &
    "pair_style	lj/cut/coul/long 2.5 6.0" &
    "read_data   ${datFile}" &
    "pair_style  none" &
    "pair_style  hybrid/overlay  lj/cut/coul/long 2.5 6.0 dpd/tstat ${TT} ${TT} 2.5 ${random}" &
else &
    "read_restart ${datFile}" &
    "pair_style  hybrid/overlay  lj/cut/coul/long 2.5 6.0 dpd/tstat ${TT} ${TT} 2.5 ${random}"

pair_modify shift yes
comm_modify  vel yes # communicate velocity information with ghost cells
timestep 0.01
variable rho_t equal count(all)/vol
thermo 5000
thermo_style custom step temp epair emol etotal press cpu xhi yhi zhi v_rho_t
thermo_modify norm yes flush yes

pair_coeff * * lj/cut/coul/long 1.0 1.0 2.5
pair_coeff * * dpd/tstat ${TT}


bond_coeff * 30.0 1.5 1.0 1.0
special_bonds fene

fix 2 all nve
fix 3 all efield 0.0 0.0 ${EE}
#fix 3a all press/berendsen x ${P_target} ${P_target} 5.0 y ${P_target} ${P_target} 5.0 couple xy 

# Performs a velocity initialization and a short equilibration for first run
if "${idx} == 000" then &
    "unfix 2" &
    "fix 2 all nve/limit 0.1" &
    "velocity all create ${TT} ${random} dist gaussian mom yes rot yes loop all" &
    "run 5000" &
    "unfix 2" &
    "fix 2 all nve" &
    "reset_timestep 0" &
    "velocity all create ${TT} ${random} dist gaussian mom yes rot yes loop all" &
    "shell mkdir comp coord_comp ptensor" &

# Store pressure tensor information
variable ts equal dt*step
variable pxx equal pxx
variable pyy equal pyy
variable pzz equal pzz
variable pxy equal pxy
variable pxz equal pxz
variable pyz equal pyz

fix 6 all print 10 "${ts} ${pxx} ${pyy} ${pzz} ${pxy} ${pxz} ${pyz}" file ./ptensor/ptensor.txt.${idx} screen no


dump 1 all image ${pdump} ./comp/bulk.*.ppm type type zoom 1.2
dump_modify 1  backcolor white boxcolor black flush yes pad 9

dump 2 all custom ${pdump} coord_comp/dump.*.txt id type x y z xu yu zu vx vy vz
dump_modify 2 flush yes pad 9

restart ${pdump} prod.restart1.${idx} prod.restart2.${idx}
log prod.log${idx}
run ${prun}

write_data prod.dat.${idx}